#!/usr/bin/env python3

"""
Module to compile wrf
"""

#################################################
#
# requirements
#
#################################################

import os, shutil, sys, glob, stat, filecmp
import subprocess
import pdb

# read the environment variable CIMEROOT in order to set paths to other libraries
CIMEROOT = os.environ.get("CIMEROOT")
if CIMEROOT is None:
    raise SystemExit("ERROR: must set CIMEROOT environment variable")
sys.path.append(os.path.join(CIMEROOT, "scripts", "Tools"))

# other requirements
from standard_script_setup import *
from CIME.case import Case
from CIME.utils import expect
from CIME.buildnml import create_namelist_infile, parse_input
from CIME.utils import run_cmd


#################################################
#
# configuration of the logger
#
#################################################

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


#################################################
#
# _build_wrf
#
#################################################

def _build_wrf():

    # debug print
    logging.info("[buildlib][_build_wrf] === Yet to implement...")

    pass
    

#################################################
#
# buildnml
#
#################################################

if __name__ == "__main__":

    # debug print
    logging.info("[buildlib][__main__] === Starting...")
    
    # invoke _build_wrf()
    logging.info("[buildlib][__main__] === Invoking _build_wrf()...")
    _build_wrf()
