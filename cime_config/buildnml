#!/usr/bin/env python3

"""
WRF namelist creator
"""

#################################################
#
# requirements
#
#################################################

import os, shutil, sys, glob, stat, filecmp
from netCDF4 import Dataset
import subprocess
import pdb

# read the environment variable CIMEROOT in order to set paths to other libraries
CIMEROOT = os.environ.get("CIMEROOT")
if CIMEROOT is None:
    raise SystemExit("ERROR: must set CIMEROOT environment variable")
sys.path.append(os.path.join(CIMEROOT, "scripts", "Tools"))

# other requirements
from standard_script_setup import *
from CIME.case import Case
from CIME.utils import expect
from CIME.buildnml import create_namelist_infile, parse_input
from CIME.utils import run_cmd


#################################################
#
# configuration of the logger
#
#################################################

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


#################################################
#
# buildnml
#
#################################################

def buildnml(case, caseroot, compname):

    # debug print
    logger.info("[buildnml][buildnml] === Yet to develop...")

    # TODO:
    # this code must be implemented and to guide this process
    # it is important to answer these questions:
    # - which namelists should we build for WRF?
    # - where should we build our namelists?
    # - where do we take the inputs for our namelists?
    
        
#################################################
#
# main
#
#################################################

if __name__ == "__main__":

    # debug print
    logger.info("[buildnml][__main__] === Starting...")
    
    # get the caseroot
    caseroot = parse_input(sys.argv)
    with Case(caseroot, read_only=False) as case:

        # invoke the buildml function
        logger.info("[buildnml][__main__] === Invoking buildnml...")
        buildnml(case, caseroot, "wrf")


